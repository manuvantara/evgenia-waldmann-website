---
import MobileMenu from './MobileMenu.astro';
import Button from './Button.astro';
import Logo from './Logo.astro';

const items = [
  {
    name: 'Программа',
    href: '#program',
  },
  {
    name: 'Обо мне',
    href: '#about-me',
  },
  {
    name: 'Отзывы',
    href: '#reviews',
  },
  {
    name: 'Ответы на вопросы',
    href: '#faq',
  },
];
---

<header
  data-header
  class="sticky top-0 z-50 mx-auto max-w-[1440px] rounded-br-[32px] bg-stromboli-700 pb-8 pt-6 transition-all duration-200 lg:rounded-b-[64px] xl:rounded-b-[128px]"
>
  <div class="container flex items-center justify-between">
    <Logo />
    <nav
      class="hidden h-12 rounded-3xl bg-stromboli-600 px-8 py-[15px] lg:block"
    >
      <ul class="flex gap-[42px] text-sm font-semibold text-stromboli-100">
        {
          items.map((item) => (
            <li class="transition-all duration-200 hover:text-stromboli-50">
              <a href={item.href}>{item.name}</a>
            </li>
          ))
        }
      </ul>
    </nav>

    <Button href="#contact" intent="outline" class="hidden lg:flex">
      Оставить заявку
    </Button>

    <button
      data-menu-button
      class="block size-8 fill-reef-200 lg:hidden"
      aria-label="Menu"
    >
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960">
        <path
          d="M160-240q-17 0-28.5-11.5T120-280q0-17 11.5-28.5T160-320h640q17 0 28.5 11.5T840-280q0 17-11.5 28.5T800-240H160Zm0-200q-17 0-28.5-11.5T120-480q0-17 11.5-28.5T160-520h640q17 0 28.5 11.5T840-480q0 17-11.5 28.5T800-440H160Zm0-200q-17 0-28.5-11.5T120-680q0-17 11.5-28.5T160-720h640q17 0 28.5 11.5T840-680q0 17-11.5 28.5T800-640H160Z"
        ></path>
      </svg>
    </button>

    <MobileMenu data-menu data-state="closed" items={items} />
  </div>
</header>

<script>
  const header = document.querySelector<HTMLElement>('[data-header]');
  const menuButton = document.querySelector('[data-menu-button]');
  const menu = document.querySelector('[data-menu]');

  // Scrollable sections
  const sections = [
    { id: 'hero', element: document.querySelector<HTMLElement>('#hero') },
    { id: 'program', element: document.querySelector<HTMLElement>('#program') },
    { id: 'cta', element: document.querySelector<HTMLElement>('#cta') },
    { id: 'contact', element: document.querySelector<HTMLElement>('#contact') },
  ];

  // Early exit if elements aren't found
  if (!header || sections.some((section) => !section.element)) {
    throw new Error('One of the elements not found');
  }

  // CTA background;
  const ctaBackgroundImage = document.querySelector<HTMLImageElement>(
    '#cta-bg'
  ) as HTMLImageElement;

  function handleScroll() {
    const headerRect = header?.getBoundingClientRect();

    // Check each section for overlap
    for (const section of sections) {
      const sectionRect = section?.element?.getBoundingClientRect();
      const shouldRound = isSectionOverlappingHeader(headerRect as DOMRect, sectionRect as DOMRect);

      section?.element?.classList.toggle('!rounded-t-none', shouldRound);

      // Special handling for CTA overlap
      if (section.id === 'cta' && shouldRound) {
        ctaBackgroundImage.classList.add('!opacity-0');
        break;
      } else {
        ctaBackgroundImage.classList.remove('!opacity-0');
      }
    }

    const isOverlappingAnySection = sections.some((section) =>
      isSectionOverlappingHeader(
        headerRect as DOMRect,
        section?.element?.getBoundingClientRect() as DOMRect
      )
    );
    header?.classList.toggle('!rounded-b-none', isOverlappingAnySection);
  }

  // Helper for checking overlap
  function isSectionOverlappingHeader(
    headerRect: DOMRect,
    sectionRect: DOMRect
  ) {
    return !(
      headerRect.bottom < sectionRect.top ||
      headerRect.top > sectionRect.bottom - headerRect.height * 2
    );
  }

  window.addEventListener('DOMContentLoaded', () => {
    handleScroll();

    window.addEventListener('scroll', handleScroll);
    menuButton?.addEventListener('click', () => {
      menu?.setAttribute('data-state', 'open');
    });
  });
</script>
