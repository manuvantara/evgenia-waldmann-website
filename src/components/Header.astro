---
import { Image } from "astro:assets";
import MobileMenu from "./MobileMenu.astro";
import Button from "./Button.astro";

const items = [
  {
    name: "Программа",
    href: "#program",
  },
  {
    name: "Обо мне",
    href: "#about-me",
  },
  {
    name: "Отзывы",
    href: "#reviews",
  },
  {
    name: "Ответы на вопросы",
    href: "#faq",
  },
];
---

<header
  data-header
  class="sticky top-0 z-50 mx-auto max-w-[1440px] rounded-br-[32px] bg-stromboli-700 pb-8 pt-6 transition-all duration-200 lg:rounded-b-[64px] xl:rounded-b-[128px]"
>
  <div class="container flex items-center justify-between">
    <!-- TODO: Center navbar -->
    <Image
      class="h-8 w-10 xl:h-12 xl:w-[60px]"
      src="/logo.svg"
      alt="Logo"
      width={60}
      height={48}
      loading="eager"
    />
    <nav
      class="hidden h-12 rounded-3xl bg-stromboli-600 px-8 py-[15px] lg:block"
    >
      <ul class="flex gap-[42px] text-sm font-semibold text-stromboli-100">
        {
          items.map((item) => (
            <li class="transition-all duration-200 hover:text-stromboli-50">
              <a href={item.href}>{item.name}</a>
            </li>
          ))
        }
      </ul>
    </nav>

    <Button href="#contact" intent="outline" class="hidden lg:flex">
      Оставить заявку
    </Button>

    <button
      data-menu-button
      class="block size-8 fill-reef-200 lg:hidden"
      aria-label="Menu"
    >
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960">
        <path
          d="M160-240q-17 0-28.5-11.5T120-280q0-17 11.5-28.5T160-320h640q17 0 28.5 11.5T840-280q0 17-11.5 28.5T800-240H160Zm0-200q-17 0-28.5-11.5T120-480q0-17 11.5-28.5T160-520h640q17 0 28.5 11.5T840-480q0 17-11.5 28.5T800-440H160Zm0-200q-17 0-28.5-11.5T120-680q0-17 11.5-28.5T160-720h640q17 0 28.5 11.5T840-680q0 17-11.5 28.5T800-640H160Z"
        ></path>
      </svg>
    </button>

    <MobileMenu data-menu data-state="closed" items={items} />
  </div>
</header>

<script>
  const header = document.querySelector<HTMLElement>("[data-header]");
  const menuButton = document.querySelector("[data-menu-button]");
  const menu = document.querySelector("[data-menu]");
  const heroSection = document.querySelector<HTMLElement>("#hero");
  const programSection = document.querySelector<HTMLElement>("#program");
  const ctaSection = document.querySelector<HTMLElement>("#cta");
  const ctaBackgroundImage = document.querySelector<HTMLElement>("#cta-bg");
  const contactSection = document.querySelector<HTMLElement>("#contact");

  function handleScroll() {
    if (
      !header ||
      !heroSection ||
      !programSection ||
      !ctaSection ||
      !ctaBackgroundImage ||
      !contactSection
    ) {
      throw new Error("One of the elements not found");
    }

    const headerRect = header.getBoundingClientRect();

    const heroRect = heroSection.getBoundingClientRect();
    const programRect = programSection.getBoundingClientRect();
    const ctaRect = ctaSection.getBoundingClientRect();
    const contactRect = contactSection.getBoundingClientRect();

    if (
      !(
        headerRect.bottom < heroRect.top ||
        headerRect.top > heroRect.bottom - headerRect.height * 2
      )
    ) {
      heroSection.classList.add("!rounded-t-none");
      header.classList.add("!rounded-b-none");
    } else if (
      !(
        headerRect.bottom < programRect.top ||
        headerRect.top > programRect.bottom - headerRect.height * 2
      )
    ) {
      programSection.classList.add("!rounded-t-none");
      header.classList.add("!rounded-b-none");
    } else if (
      !(
        headerRect.bottom < ctaRect.top ||
        headerRect.top > ctaRect.bottom - headerRect.height * 2
      )
    ) {
      ctaSection.classList.add("!rounded-t-none");
      ctaBackgroundImage.classList.add("!opacity-0");
      header.classList.add("!rounded-b-none");
    } else if (
      !(
        headerRect.bottom < contactRect.top ||
        headerRect.top > contactRect.bottom - headerRect.height * 2
      )
    ) {
      contactSection.classList.add("!rounded-t-none");
      header.classList.add("!rounded-b-none");
    } else {
      heroSection.classList.remove("!rounded-t-none");
      programSection.classList.remove("!rounded-t-none");
      ctaSection.classList.remove("!rounded-t-none");
      contactSection.classList.remove("!rounded-t-none");
      header.classList.remove("!rounded-b-none");
    }

    if (headerRect.bottom < ctaRect.top) {
      ctaBackgroundImage.classList.remove("!opacity-0");
    }
  }

  window.addEventListener("scroll", handleScroll);

  menuButton?.addEventListener("click", () => {
    menu?.setAttribute("data-state", "open");
  });
</script>
